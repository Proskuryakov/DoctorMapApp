<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ru.vsu.cs.app.db.repositories.SickRepository">

    <select id="create"
            parameterType="ru.vsu.cs.app.db.models.SickModel"
            resultType="ru.vsu.cs.app.db.models.SickModel"
    >
        insert into sick (address_id, surname, name_patronymic)
        values (#{addressId}, #{surname}, #{namePatronymic})
        returning id, address_id, surname, name_patronymic;
    </select>

    <insert id="addIllnessDependence">
        insert into illness_sick values
        <foreach collection="illnessIdList" item="illnessId" separator=",">
            (#{sickId}, #{illnessId})
        </foreach>
    </insert>

    <update id="update" parameterType="ru.vsu.cs.app.db.models.SickModel">
        update sick
        set address_id      = #{addressId},
            surname         = #{surname},
            name_patronymic = #{namePatronymic}
        where id = #{id};
    </update>

    <delete id="delete" parameterType="long">
        delete
        from sick
        where id = #{id};
    </delete>

    <delete id="deleteIllnessDependence">
        <foreach collection="illnessIdList" item="illnessId">
            delete from illness_sick where sick_id = #{sickId} and illness_id = #{illnessId};
        </foreach>
    </delete>

    <select id="findById" parameterType="long" resultType="ru.vsu.cs.app.db.models.SickWithAddressModel">
        select *
        from sick s
                 join geoAddress a on a.id = s.address_id
        where s.id = #{id};
    </select>

    <select id="getAllByParameters" resultType="ru.vsu.cs.app.db.models.SickWithAddressModel">
        <trim suffixOverrides="AND">
            select s.id, s.address_id, s.surname, s.name_patronymic, a.region, a.city, a.street, a.house, a.lat, a.lon
            from sick s
            join geoAddress a on a.id = s.address_id
            <if test="illnessIdList != null">
                <if test="!isIllnessTogether">
                    <foreach collection="illnessIdList" item="illnessId">
                        join illness_sick i${illnessId} on s.id = i${illnessId}.sick_id
                    </foreach>
                </if>
                <if test="isIllnessTogether">
                    join illness_sick i on s.id = i.sick_id
                </if>
            </if>
            <where>
                <if test="sickModel != null">
                    <if test="sickModel.surname != null">
                        surname = #{sickModel.surname} and
                    </if>
                    <if test="sickModel.namePatronymic != null">
                        <bind name="namePattern" value="'%' + sickModel.namePatronymic + '%'"/>
                        name_patronymic like #{namePattern} and
                    </if>
                </if>
                <if test="addressModel != null">
                    <if test="addressModel.region != null">
                        <bind name="regionPattern" value="'%' + addressModel.region + '%'"/>
                        region like #{regionPattern} and
                    </if>
                    <if test="addressModel.city != null">
                        city = #{addressModel.city} and
                    </if>
                    <if test="addressModel.street != null">
                        street = #{addressModel.street} and
                    </if>
                    <if test="addressModel.house != null">
                        house = #{addressModel.house} and
                    </if>
                </if>
                <if test="illnessIdList != null">

                    <if test="!isIllnessTogether">
                        <foreach collection="illnessIdList" item="illnessId" separator=" and ">
                            i${illnessId}.illness_id = #{illnessId}
                        </foreach>
                    </if>

                    <if test="isIllnessTogether">
                        <foreach collection="illnessIdList" item="illnessId" separator=" or ">
                            i.illness_id = #{illnessId}
                        </foreach>
                    </if>

                </if>
            </where>
            group by s.id, s.address_id, s.surname, s.name_patronymic, a.region, a.city, a.street, a.house, a.lat, a.lon;
        </trim>
    </select>

</mapper>
